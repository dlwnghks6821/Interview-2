Join 
: 두개이상의 테이블이나 뷰(view)를 연결하는 방법 

Ex): 벤다이어그램을 생각하면 편해요 

1) inner join
1. 동등 조인: where 절에서 (=) 를 사용하여 두개이상의 테이블
, 뷰를 연결하는 방법 (where 아래 있는 것이 조인 조건 이 된다)
결론적으로는 동등조인은 조인조건에 따라서 두개이상의 테이블이나 뷰를
연결하는 방법 
2)semi join: 서브쿼리에 존재하는 데이터를 메인쿼리에서 추출
Exist, in
3)anti join: 서브쿼리에 존재하지 않는 데이터를 메인쿼리에서 추출
Not Exist , Not in
4)self join : 두개 이상의 테이블이아닌 동일한 테이블을 이용한
조인 

SubQuery
:sql문장에서 사용되는 또 다른 보조 select 문 
중간단계 , 보조역할을 해주는 select문을 서브 쿼리라고한다 
(메인쿼리가 최종 결과를 출력하는데 , 서브쿼리는 보조역할을 한다)

종류 
1) 메인쿼리의 연관성에 따라 
1.연관성이 없는 서브쿼리:조인조건이 걸리지 않은 서브쿼리 
2.연관성이 있는 서브쿼리: 조인 조건이 걸린 서브쿼리 


2) 형태에따라
1.select절에서 사용 : 일반 서브쿼리
2.from 절에서 사용 : 인라인 뷰 ( 사실 from 절에서는 테이블이 나 뷰가 오는데 서브쿼리를 from절에서 사용해서 하나의 테이블이나 뷰처럼 사용할수있다)

3.where 절 에서 사용 : 중첩쿼리 


Spring framework특징 
POJO(Plain old Java Object): 별도의 API를 사용하지 않는 방식의 프레임워크 
개발자가 특정 라이브러리나 컨테이너에 종속적이지 않다는점이 장점
---> 종속적이지 않다 ==> ex) 스프링 프레임워크를 사용하기 전에는 JDBCDRiver와 같은 라이브러리를 개발자가 직접 import 하고 , 다운로드했는데 
스프링에서는 IOC, DI개념을 통해서 pom.xml파일과, 설정파일인 configuration file 을 통해서 
필요한 라이브러리를쉽게  Import 하고 ,  설정할수 있게 되었다는 점에서 역할이 뛰어남 


Ioc (Inversion of control) 
기존에는 프로그램이 외부라이브러리를 호출했지만 
Ioc 디자인 패턴 에서는 외부라이브러리가 프로그램을 호출하는 방식 의 디자인 패턴을 이야한다 
대부분의 프레임워크가 이러한 패러다임을 사용 

DI(dependency injection)
의존성 주입
의존성이란 객체가 다른 객체없이는 제 역할을 할수 없는것을 의존성이라고 한다 ( 객체는 객체들끼리 상호작용을통해 제 역할을 하고 있다는 뜻이다.)
==> 의존성은 객체가 다른객체의 상태에따라 영향을 받는것을 의미한다 

외부에서 객체를 주입하는 방법 
==> 유지보수의 편의성 , 개발을 할때 주입 한 객체가 어디로부터 왔는지에 대한 신경을 쓸필요가 없게됨(객체 자신의 역할에 집중할수 있다는점이 장점 )

DI방법 ==> 1) xml , 2) annotaition 3) java

Bean ==> Application Context에서 관리하는 객체들을 Bean이라고 부른다 

AOP
(Aspect Oriented Programming)
관점 지향 프로그래밍
==>결론적으로 중복되는 코드를 줄여줌으로써 재사용성을 강화한다

중복되는 내용 , 코드를 횡단관심사라고 부르고 그 관심사를 하나의 모듈로 분리 시켜서 프로그래밍하는 기법 


lombok==>
ORM (Mapping) 시에 테이블에 있는 컬럼을 추가 삭제할때 별도로 필드 ,생성자를 수정을 해줘야 했는데
Lombok 을 이용해서 따로 ORM 필드를 생성할 필요가 없다 
자동으로 만들어줌 

My batis 
예전에는 JDBC Template API를 사용하면서 있었던 어려움 
1) 코드가 길다
2) 중복되는 코드가 있다
3) sql문을 동적으로 사용할수 없다.(where = ? , sql문장 그대로 사용을 할수가 없음 )
4) 개발자가 하나하나 DB connection 을 관리해주어야 한다 (conn close( ). rs.next( ) ) 등의 API 를 하나하나 코딩해주어야함 

==> 이러한 문제점을 보완한것이 마이바티스 DB library 
장점 
1) 예전처럼 개발자 JDBC API 를 일일이 코딩할 필요가 없어졌다
2) 동적 sql 문을 사용할수 있게되었다 (마이바티스 특징중하나)
